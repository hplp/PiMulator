<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com"
		xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<spirit:vendor>xilinx.com</spirit:vendor>
	<spirit:library>user</spirit:library>
	<spirit:name>axi_perf_mon</spirit:name>
	<spirit:version>5.0</spirit:version>
	<spirit:busInterfaces>
		<spirit:busInterface>
			<spirit:name>S_AXI</spirit:name>
			<spirit:displayName>S_AXI</spirit:displayName>
			<spirit:description>AXI4 slave</spirit:description>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>S_AXI_ACLK</spirit:name>
			<spirit:displayName>S_AXI_ACLK</spirit:displayName>
			<spirit:description>s_axi_aclk</spirit:description>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_ACLK.ASSOCIATED_RESET">s_axi_aresetn</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_ACLK.ASSOCIATED_BUSIF">S_AXI</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>S_AXI_ARESETN</spirit:name>
			<spirit:displayName>S_AXI_ARESETN</spirit:displayName>
			<spirit:description>s_axi_aresetn</spirit:description>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_ARESETN.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>M_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))= 1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>S_AXI_OFFLD</spirit:name>
			<spirit:displayName>S_AXI_OFFLD</spirit:displayName>
			<spirit:description>AXI4 slave</spirit:description>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))= 1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_0_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_ADVANCED&apos;))= 1 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_1_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_2_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_3_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_4_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_5_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_6_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_7_AXIS</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="axis_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TDEST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tdest</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TKEEP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tkeep</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TUSER</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tuser</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>TVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_tvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_0_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_ADVANCED&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_0_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_ADVANCED&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_1_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_1_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_2_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_2_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_3_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_3_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_4_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_4_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_5_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_5_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_6_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_6_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_7_AXI</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT_7_AXI4LITE</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:monitor spirit:interfaceMode="slave"/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4LITE&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>M_AXIS_ACLK</spirit:name>
			<spirit:displayName>M_AXIS_ACLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_ACLK.ASSOCIATED_BUSIF">M_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_ACLK.ASSOCIATED_RESET">m_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>M_AXIS_ARESET</spirit:name>
			<spirit:displayName>M_AXIS_ARESET</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>m_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.M_AXIS_ARESET.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>S_AXI_OFFLD_ACLK</spirit:name>
			<spirit:displayName>S_AXI_OFFLD_ACLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_OFFLD_ACLK.ASSOCIATED_BUSIF">S_AXI_OFFLD</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_OFFLD_ACLK.ASSOCIATED_RESET">s_axi_offld_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>S_AXI_OFFLD_ARESETN</spirit:name>
			<spirit:displayName>S_AXI_OFFLD_ARESETN</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_offld_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.S_AXI_OFFLD_ARESETN.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;)) =1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>slot0_axi_clk</spirit:name>
			<spirit:displayName>slot0_axi_clk</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXI_CLK.ASSOCIATED_BUSIF">SLOT_0_AXI:SLOT_0_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXI_CLK.ASSOCIATED_RESET">slot_0_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="( spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT0_AXI_RST</spirit:name>
			<spirit:displayName>SLOT0_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT0_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT0_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_0_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXIS_CLK.ASSOCIATED_RESET">slot_0_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT0_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT0_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_0_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT0_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1)">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT1_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT1_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXI_CLK.ASSOCIATED_BUSIF">SLOT_1_AXI:SLOT_1_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXI_CLK.ASSOCIATED_RESET">slot_1_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )   and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT1_AXI_RST</spirit:name>
			<spirit:displayName>SLOT1_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT1_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT1_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_1_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXIS_CLK.ASSOCIATED_RESET">slot_1_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT1_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT1_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_1_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT1_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT2_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT2_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXI_CLK.ASSOCIATED_BUSIF">SLOT_2_AXI:SLOT_2_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXI_CLK.ASSOCIATED_RESET">slot_2_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT2_AXI_RST</spirit:name>
			<spirit:displayName>SLOT2_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT2_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT2_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_2_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXIS_CLK.ASSOCIATED_RESET">slot_2_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT2_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT2_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_2_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT2_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT3_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT3_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXI_CLK.ASSOCIATED_BUSIF">SLOT_3_AXI:SLOT_3_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXI_CLK.ASSOCIATED_RESET">slot_3_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT3_AXI_RST</spirit:name>
			<spirit:displayName>SLOT3_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT3_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT3_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_3_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXIS_CLK.ASSOCIATED_RESET">slot_3_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT3_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT3_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_3_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT3_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT4_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT4_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXI_CLK.ASSOCIATED_BUSIF">SLOT_4_AXI:SLOT_4_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXI_CLK.ASSOCIATED_RESET">slot_4_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT4_AXI_RST</spirit:name>
			<spirit:displayName>SLOT4_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT4_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT4_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_4_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXIS_CLK.ASSOCIATED_RESET">slot_4_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT4_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT4_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_4_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT4_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT5_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT5_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXI_CLK.ASSOCIATED_BUSIF">SLOT_5_AXI:SLOT_5_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXI_CLK.ASSOCIATED_RESET">slot_5_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT5_AXI_RST</spirit:name>
			<spirit:displayName>SLOT5_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT6_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT6_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXI_CLK.ASSOCIATED_BUSIF">SLOT_6_AXI:SLOT_6_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXI_CLK.ASSOCIATED_RESET">slot_6_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT6_AXI_RST</spirit:name>
			<spirit:displayName>SLOT6_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT6_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT6_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_6_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXIS_CLK.ASSOCIATED_RESET">slot_6_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT6_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT6_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_6_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT6_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT5_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT5_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_5_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXIS_CLK.ASSOCIATED_RESET">slot_5_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT5_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT5_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_5_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT5_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT7_AXI_CLK</spirit:name>
			<spirit:displayName>SLOT7_AXI_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXI_CLK.ASSOCIATED_BUSIF">SLOT_7_AXI:SLOT_7_AXI4LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXI_CLK.ASSOCIATED_RESET">slot_7_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT7_AXI_RST</spirit:name>
			<spirit:displayName>SLOT7_AXI_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXI_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT7_AXIS_CLK</spirit:name>
			<spirit:displayName>SLOT7_AXIS_CLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXIS_CLK.ASSOCIATED_BUSIF">SLOT_7_AXIS</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXIS_CLK.ASSOCIATED_RESET">slot_7_axis_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>SLOT7_AXIS_RST</spirit:name>
			<spirit:displayName>SLOT7_AXIS_RST</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>slot_7_axis_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SLOT7_AXIS_RST.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>INTR</spirit:name>
			<spirit:displayName>INTR</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="interrupt"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="interrupt_rtl"
					spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>interrupt</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>interrupt</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>SENSITIVITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.INTR.SENSITIVITY">LEVEL_HIGH</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>CORE_ACLK</spirit:name>
			<spirit:displayName>CORE_ACLK</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>core_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>CORE_ARESETN</spirit:name>
			<spirit:displayName>CORE_ARESETN</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>core_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.CORE_ARESETN.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
	</spirit:busInterfaces>
	<spirit:model>
		<spirit:views>
			<spirit:view>
				<spirit:name>xilinx_blockdiagram</spirit:name>
				<spirit:displayName>Block Diagram</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:block.diagram</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_blockdiagram_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>33d2ea0a</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_examplesscriptext</spirit:name>
				<spirit:displayName>Examples Script Extension</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:examples.scriptext</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_examplesscriptext_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>24689b8d</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_examplessimulation</spirit:name>
				<spirit:displayName>Examples Simulation</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:examples.simulation</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_examplessimulation_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>f30af7a7</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_examplessynthesis</spirit:name>
				<spirit:displayName>Examples Synthesis</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:examples.synthesis</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_examplessynthesis_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>014d6d49</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_xpgui</spirit:name>
				<spirit:displayName>UI Layout</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:xgui.ui</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_xpgui_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>ca00780b</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_productguide</spirit:name>
				<spirit:displayName>Product Guide</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:docs.productguide</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_productguide_view_fileset</spirit:localName>
				</spirit:fileSetRef>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_anylanguagebehavioralsimulation</spirit:name>
				<spirit:displayName>Simulation</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:simulation</spirit:envIdentifier>
				<spirit:modelName>axi_perf_mon_v5_0_top</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_anylanguagebehavioralsimulation_xilinx_com_ip_fifo_generator_13_2_2__ref_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>536e64a5</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_anylanguagesynthesis</spirit:name>
				<spirit:displayName>Synthesis</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:synthesis</spirit:envIdentifier>
				<spirit:modelName>axi_perf_mon_v5_0_top</spirit:modelName>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_anylanguagesynthesis_xilinx_com_ip_fifo_generator_13_2_2__ref_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_anylanguagesynthesis_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>bdd563df</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_upgradescripts</spirit:name>
				<spirit:displayName>Upgrade Tcl Functions</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:upgrade.script</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_upgradescripts_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>44e912c9</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_utilityxitfiles</spirit:name>
				<spirit:displayName>Utility XIT/TTCL</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:xit.util</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_utilityxitfiles_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>bf42c0f1</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
			<spirit:view>
				<spirit:name>xilinx_versioninformation</spirit:name>
				<spirit:displayName>Version Information</spirit:displayName>
				<spirit:envIdentifier>:vivado.xilinx.com:docs.versioninfo</spirit:envIdentifier>
				<spirit:fileSetRef>
					<spirit:localName>xilinx_versioninformation_view_fileset</spirit:localName>
				</spirit:fileSetRef>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>viewChecksum</spirit:name>
						<spirit:value>0d354ff0</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
			</spirit:view>
		</spirit:views>
		<spirit:ports>
			<spirit:port>
				<spirit:name>s_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">15</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SUPPORT_ID_REFLECTION&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SUPPORT_ID_REFLECTION&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">15</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SUPPORT_ID_REFLECTION&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SUPPORT_ID_REFLECTION&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) > 0 and ( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) > 0 and ( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) > 0 and ( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH&apos;)) > 0 and ( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1)))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(( (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; ) ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;))= 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1))">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXIS_TID_WIDTH&apos;)) > 0 and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;))">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXIS_TDEST_WIDTH&apos;)) > 0 and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;))">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_0_AXIS_TUSER_WIDTH&apos;)) > 0 and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos;))">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_0_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; ) and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_1_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_1_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;)  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;)  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_2_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) >2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_2_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;)  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;)  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_3_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL&apos;)) = &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_3_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_4_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_4_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_5_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_5_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_6_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_6_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_DATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ADDR_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 4 : 8) - 1)">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:resolve="dependent"
								spirit:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos;) ? 2 : 1) - 1)">0</spirit:left>
						<spirit:right>0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH&apos;)) > 0 and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_DATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI3&apos; or spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;)) = &apos;AXI4LITE&apos; )  and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH&apos;)) - 1)">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tkeep</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue spirit:format="bitString"
								spirit:resolve="dependent"
								spirit:dependency="(spirit::decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH&apos;)) / 8){1}"
								spirit:bitStringLength="4">0xF</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXIS_TID_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tdest</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TDEST_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXIS_TDEST_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_axis_tuser</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXIS_TUSER_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_SLOT_7_AXIS_TUSER_WIDTH&apos;)) > 0 and spirit:decode(id(&apos;MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL&apos;))= &apos;AXI4S&apos; and spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_ext_trig</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>slot_7_ext_trig_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_TRIGGERS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_0</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_0</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_0_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_0_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_0</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_1</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_1</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_1_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_1_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_1</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 1 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_2</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_2</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_2_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_2_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_2</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 2 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_3</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_3</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_3_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_3_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_3</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 3 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_4</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_4</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_4_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_4_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_4</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 4 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_5</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_5</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_5_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_5_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_5</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 5 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_6</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_6</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_6_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_6_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_6</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 6 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_clk_7</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_rstn_7</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_7_cnt_start</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_7_cnt_stop</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ext_event_7</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS&apos;)) > 7 and spirit:decode(id(&apos;PARAM_VALUE.ENABLE_EXT_EVENTS&apos;))= 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>capture_event</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>reset_event</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_PROFILE&apos;))=1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>core_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>core_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1 ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_tdata</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIFO_AXIS_TDATA_WIDTH&apos;)) - 1)">55</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1 ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_tstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIFO_AXIS_TDATA_WIDTH&apos;)) div 8) - 1)">6</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_tvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1 ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_tid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_FIFO_AXIS_TID_WIDTH&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1 ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>m_axis_tready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1 ) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.S_AXI_OFFLD_ID_WIDTH&apos;)) ) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1) and (spirit:decode(id(&apos;PARAM_VALUE.S_AXI_OFFLD_ID_WIDTH&apos;)) >0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.S_AXI_OFFLD_ID_WIDTH&apos;)) ) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1) and (spirit:decode(id(&apos;PARAM_VALUE.S_AXI_OFFLD_ID_WIDTH&apos;)) >0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_offld_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_EVENT_LOG&apos;))=1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TRACE&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_LOG_DATA_OFFLD&apos;)) =1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>interrupt</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
							<spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
			</spirit:port>
		</spirit:ports>
		<spirit:modelParameters>
			<spirit:modelParameter xsi:type="spirit:nameValueTypeType"
					spirit:dataType="string">
				<spirit:name>C_FAMILY</spirit:name>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FAMILY">virtex7</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_INSTANCE</spirit:name>
				<spirit:displayName>C Instance</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_INSTANCE">axi_perf_mon_test</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>C S Axi Addr Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_ADDR_WIDTH">16</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>C S Axi Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_S_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_PROTOCOL">AXI4LITE</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>AXI Id Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="8">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SUPPORT_ID_REFLECTION</spirit:name>
				<spirit:displayName>Enable AXI ID Reflection</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SUPPORT_ID_REFLECTION">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_ENABLE_ADVANCED</spirit:name>
				<spirit:displayName>Enable Advanced Mode</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_ENABLE_ADVANCED">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_ENABLE_PROFILE</spirit:name>
				<spirit:displayName>Enable Profile Mode</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_ENABLE_PROFILE">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_ENABLE_TRACE</spirit:name>
				<spirit:displayName>Enable Trace Mode</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_ENABLE_TRACE">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_WR_ADD_FLAG</spirit:name>
				<spirit:displayName>Enable write address flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_WR_ADD_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_FIRST_WRITE_FLAG</spirit:name>
				<spirit:displayName>Enable First Write Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_FIRST_WRITE_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_LAST_WRITE_FLAG</spirit:name>
				<spirit:displayName>Enable Last Write Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_LAST_WRITE_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_RESPONSE_FLAG</spirit:name>
				<spirit:displayName>Enable Response Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_RESPONSE_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_RD_ADD_FLAG</spirit:name>
				<spirit:displayName>Enable Read address Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_RD_ADD_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_FIRST_READ_FLAG</spirit:name>
				<spirit:displayName>Enable First Read Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_FIRST_READ_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_LAST_READ_FLAG</spirit:name>
				<spirit:displayName>Enable Last Read Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_LAST_READ_FLAG">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_SW_REG_WR_FLAG</spirit:name>
				<spirit:displayName>Enable SW Register Write Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_SW_REG_WR_FLAG">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EN_EXT_EVENTS_FLAG</spirit:name>
				<spirit:displayName>Enable External Events Flag</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EN_EXT_EVENTS_FLAG">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_NUM_MONITOR_SLOTS</spirit:name>
				<spirit:displayName>Number of Monitor Slots</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_NUM_MONITOR_SLOTS"
						spirit:minimum="1"
						spirit:maximum="8">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_ENABLE_EVENT_COUNT</spirit:name>
				<spirit:displayName>Enable Event Counters</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_ENABLE_EVENT_COUNT">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_NUM_OF_COUNTERS</spirit:name>
				<spirit:displayName>Number of Counters</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_NUM_OF_COUNTERS"
						spirit:minimum="1"
						spirit:maximum="10">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_METRIC_COUNT_WIDTH</spirit:name>
				<spirit:displayName>C Metric Count Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_METRIC_COUNT_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_METRIC_COUNT_SCALE</spirit:name>
				<spirit:displayName>C Metric Count Scale</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_METRIC_COUNT_SCALE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_GLOBAL_COUNT_WIDTH</spirit:name>
				<spirit:displayName>Global Clock Count Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_GLOBAL_COUNT_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_HAVE_SAMPLED_METRIC_CNT</spirit:name>
				<spirit:displayName>Enable Sampled Metric Counters</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_HAVE_SAMPLED_METRIC_CNT">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_METRICS_SAMPLE_COUNT_WIDTH</spirit:name>
				<spirit:displayName>Sample Interval Counter Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_METRICS_SAMPLE_COUNT_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_AXI4LITE_CORE_CLK_ASYNC</spirit:name>
				<spirit:displayName>Enable Synchronizers (Between AXI4LITE and Core Clocks)</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_AXI4LITE_CORE_CLK_ASYNC">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_0_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_0_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_0_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_1_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_1_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_1_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_2_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_2_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_2_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_3_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_3_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_3_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_4_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_4_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_4_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_5_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_5_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_5_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_6_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_6_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_6_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>Address Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXI_ADDR_WIDTH"
						spirit:minimum="1"
						spirit:maximum="64">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXI_DATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXI_ID_WIDTH</spirit:name>
				<spirit:displayName>ID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SLOT_7_AXI_PROTOCOL</spirit:name>
				<spirit:displayName>AXI Protocol</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXI_PROTOCOL">AXI4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>TDATA Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>TID Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXIS_TDEST_WIDTH</spirit:name>
				<spirit:displayName>TDEST Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXIS_TDEST_WIDTH"
						spirit:minimum="1"
						spirit:maximum="16">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_AXIS_TUSER_WIDTH</spirit:name>
				<spirit:displayName>TUSER Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_AXIS_TUSER_WIDTH"
						spirit:minimum="1"
						spirit:maximum="256">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SLOT_7_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SLOT_7_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_REG_ALL_MONITOR_SIGNALS</spirit:name>
				<spirit:displayName>Register All Monitor Signals</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_REG_ALL_MONITOR_SIGNALS">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT0_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 0</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT0_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT1_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 1</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT1_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT2_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 2</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT2_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT3_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 3</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT3_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT4_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 4</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT4_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT5_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 5</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT5_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT6_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 6</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT6_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_EXT_EVENT7_FIFO_ENABLE</spirit:name>
				<spirit:displayName>Enable Synchronizer for External Event 7</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_EXT_EVENT7_FIFO_ENABLE">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_ENABLE_EVENT_LOG</spirit:name>
				<spirit:displayName>Enable Event Log</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_ENABLE_EVENT_LOG">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_FIFO_AXIS_DEPTH</spirit:name>
				<spirit:displayName>Streaming FIFO Depth</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FIFO_AXIS_DEPTH">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_FIFO_AXIS_TDATA_WIDTH</spirit:name>
				<spirit:displayName>C Fifo Axis Tdata Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FIFO_AXIS_TDATA_WIDTH">56</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_AXIS_DWIDTH_ROUND_TO_32</spirit:name>
				<spirit:displayName>C Fifo Width rounded</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_AXIS_DWIDTH_ROUND_TO_32">64</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_FIFO_AXIS_TID_WIDTH</spirit:name>
				<spirit:displayName>Streaming Interface TID width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FIFO_AXIS_TID_WIDTH"
						spirit:minimum="1"
						spirit:maximum="8">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_FIFO_AXIS_SYNC</spirit:name>
				<spirit:displayName>Is Event Log FIFO Synchronous</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FIFO_AXIS_SYNC">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SHOW_AXI_IDS</spirit:name>
				<spirit:displayName>Show AXI IDs In Log Data</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SHOW_AXI_IDS">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SHOW_AXI_LEN</spirit:name>
				<spirit:displayName>Show AXI Length In Log Data</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SHOW_AXI_LEN">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SHOW_AXIS_TID</spirit:name>
				<spirit:displayName>Show AXI Streaming TID In Log Data</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SHOW_AXIS_TID">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SHOW_AXIS_TDEST</spirit:name>
				<spirit:displayName>Show AXI Streaming TDEST In Log Data</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SHOW_AXIS_TDEST">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SHOW_AXIS_TUSER</spirit:name>
				<spirit:displayName>Show AXI Streaming TUSER In Log Data</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SHOW_AXIS_TUSER">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>ENABLE_EXT_EVENTS</spirit:name>
				<spirit:displayName>Enable External Events</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.ENABLE_EXT_EVENTS">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>COUNTER_LOAD_VALUE</spirit:name>
				<spirit:displayName>Counter Load Value</spirit:displayName>
				<spirit:value spirit:format="bitString"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.COUNTER_LOAD_VALUE"
						spirit:bitStringLength="32">0x00000000</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_LOG_DATA_OFFLD</spirit:name>
				<spirit:displayName>C Log Data Offload</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_LOG_DATA_OFFLD">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>S_AXI_OFFLD_ID_WIDTH</spirit:name>
				<spirit:displayName>C S AXI Interface ID width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.S_AXI_OFFLD_ID_WIDTH">1</spirit:value>
			</spirit:modelParameter>
		</spirit:modelParameters>
	</spirit:model>
	<spirit:choices>
		<spirit:choice>
			<spirit:name>choices_0</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_1</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_2</spirit:name>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
			<spirit:enumeration>2048</spirit:enumeration>
			<spirit:enumeration>4096</spirit:enumeration>
			<spirit:enumeration>8192</spirit:enumeration>
			<spirit:enumeration>16384</spirit:enumeration>
			<spirit:enumeration>32768</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_3</spirit:name>
			<spirit:enumeration>Stream</spirit:enumeration>
			<spirit:enumeration>Memory map</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_4</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_5</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_6</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_7</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_8</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_9</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_10</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_11</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_12</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_13</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_14</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_15</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_16</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_17</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_18</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_19</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_20</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_21</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_22</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_23</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_24</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_25</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_26</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_27</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_28</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_29</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_30</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_31</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_32</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_33</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_34</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_35</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_36</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_37</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_38</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_39</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_40</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_41</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_42</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_43</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_44</spirit:name>
			<spirit:enumeration>AXI3</spirit:enumeration>
			<spirit:enumeration>AXI4</spirit:enumeration>
			<spirit:enumeration>AXI4S</spirit:enumeration>
			<spirit:enumeration>AXI4LITE</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_45</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
			<spirit:enumeration>128</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
			<spirit:enumeration>512</spirit:enumeration>
			<spirit:enumeration>1024</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_46</spirit:name>
			<spirit:enumeration>1</spirit:enumeration>
			<spirit:enumeration>2</spirit:enumeration>
			<spirit:enumeration>4</spirit:enumeration>
			<spirit:enumeration>8</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_47</spirit:name>
			<spirit:enumeration>32</spirit:enumeration>
			<spirit:enumeration>64</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_48</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_49</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_50</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_51</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_52</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_53</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_54</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_55</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_56</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_57</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_58</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_59</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_60</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_61</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_62</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_63</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_64</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_65</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_66</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_67</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_68</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_69</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
	</spirit:choices>
	<spirit:fileSets>
		<spirit:fileSet>
			<spirit:name>xilinx_blockdiagram_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>bd/bd.tcl</spirit:name>
				<spirit:fileType>tclSource</spirit:fileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_examplesscriptext_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>ttcl/generate_exdes_cores.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_examplessimulation_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>ttcl/apm_tb_top.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_examplessynthesis_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>ttcl/apm_exdes_xdc.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/apm_log_data.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/apm_exdes_top.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/atg_static_cmds.xit</spirit:name>
				<spirit:userFileType>xit</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/clock_gen.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_xpgui_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>xgui/axi_perf_mon_v5_0.tcl</spirit:name>
				<spirit:fileType>tclSource</spirit:fileType>
				<spirit:userFileType>XGUI_VERSION_2</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_productguide_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>http://www.xilinx.com/cgi-bin/docs/ipdoc?c=axi_perf_mon;v=v5_0;d=pg037_axi_perf_mon.pdf</spirit:name>
				<spirit:userFileType>pdf</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_async_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_sync_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_acc_n_incr.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_async_stream_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_axi_interface.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_top.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_counter.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_cdc_sync.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_flags_gen.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_glbl_clk_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_interrupt_module.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_intr_sync.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_calc.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_counters.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_sel_n_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_mon_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_ext_calc.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_register_module.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_samp_intl_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_samp_metrics_data.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_strm_fifo_wr_logic.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_advanced.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_acc_sample_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_register_module_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_calc_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_counters_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_flags_gen_trace.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_anylanguagebehavioralsimulation_xilinx_com_ip_fifo_generator_13_2_2__ref_view_fileset</spirit:name>
			<spirit:vendorExtensions>
				<xilinx:subCoreRef>
					<xilinx:componentRef xilinx:vendor="xilinx.com"
							xilinx:library="ip"
							xilinx:name="fifo_generator"
							xilinx:version="13.2">
						<xilinx:mode xilinx:name="copy_mode"/>
					</xilinx:componentRef>
				</xilinx:subCoreRef>
			</spirit:vendorExtensions>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_anylanguagesynthesis_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_async_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_sync_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_acc_n_incr.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_async_stream_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_axi_interface.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_counter.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_cdc_sync.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_flags_gen.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_glbl_clk_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_interrupt_module.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_mon_fifo.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_ext_calc.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_register_module.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_samp_intl_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_samp_metrics_data.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_strm_fifo_wr_logic.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_top.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/xdc.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/xdc_clocks.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/ooc.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
				<spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
				<spirit:userFileType>USED_IN_implementation</spirit:userFileType>
				<spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_intr_sync.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_calc.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_counters.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_sel_n_cnt.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_advanced.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_acc_sample_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_register_module_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_calc_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_metric_counters_profile.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
			<spirit:file>
				<spirit:name>hdl/src/verilog/axi_perf_mon_v5_0_flags_gen_trace.v</spirit:name>
				<spirit:fileType>verilogSource</spirit:fileType>
				<spirit:userFileType>CHECKSUM_abfc216a</spirit:userFileType>
				<spirit:logicalName>axi_perf_mon_v5_0</spirit:logicalName>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_anylanguagesynthesis_xilinx_com_ip_fifo_generator_13_2_2__ref_view_fileset</spirit:name>
			<spirit:vendorExtensions>
				<xilinx:subCoreRef>
					<xilinx:componentRef xilinx:vendor="xilinx.com"
							xilinx:library="ip"
							xilinx:name="fifo_generator"
							xilinx:version="13.2">
						<xilinx:mode xilinx:name="copy_mode"/>
					</xilinx:componentRef>
				</xilinx:subCoreRef>
			</spirit:vendorExtensions>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_upgradescripts_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>xgui/axi_perf_mon_upgrades.tcl</spirit:name>
				<spirit:fileType>tclSource</spirit:fileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_utilityxitfiles_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>ttcl/atg_reg_func.xit</spirit:name>
				<spirit:userFileType>xit</spirit:userFileType>
			</spirit:file>
			<spirit:file>
				<spirit:name>ttcl/disclaimer.ttcl</spirit:name>
				<spirit:userFileType>ttcl</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
		<spirit:fileSet>
			<spirit:name>xilinx_versioninformation_view_fileset</spirit:name>
			<spirit:file>
				<spirit:name>doc/axi_perf_mon_v5_0_changelog.txt</spirit:name>
				<spirit:userFileType>text</spirit:userFileType>
			</spirit:file>
		</spirit:fileSet>
	</spirit:fileSets>
	<spirit:description>AXI Performance Monitor</spirit:description>
	<spirit:parameters>
		<spirit:parameter>
			<spirit:name>C_HAVE_SAMPLED_METRIC_CNT</spirit:name>
			<spirit:displayName>Enable Sampled Metric Counters</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_HAVE_SAMPLED_METRIC_CNT"
					spirit:choiceRef="choices_0"
					spirit:order="11300">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_AXI4LITE_CORE_CLK_ASYNC</spirit:name>
			<spirit:displayName>Enable Synchronizers (Between AXI4LITE and Core Clocks)</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_AXI4LITE_CORE_CLK_ASYNC"
					spirit:choiceRef="choices_1"
					spirit:order="11200">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_FIFO_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>Streaming Interface TID width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_FIFO_AXIS_TID_WIDTH"
					spirit:order="11100"
					spirit:minimum="1"
					spirit:maximum="8">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_FIFO_AXIS_DEPTH</spirit:name>
			<spirit:displayName>Streaming FIFO Depth</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_FIFO_AXIS_DEPTH"
					spirit:choiceRef="choices_2"
					spirit:order="11000">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>S_AXI_OFFLD_ID_WIDTH</spirit:name>
			<spirit:displayName>ID width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.S_AXI_OFFLD_ID_WIDTH"
					spirit:order="12000"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_LOG_DATA_OFFLD</spirit:name>
			<spirit:displayName>Log Data Off load Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_LOG_DATA_OFFLD"
					spirit:choiceRef="choices_3"
					spirit:order="12100">Stream</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_ENABLE_EVENT_LOG</spirit:name>
			<spirit:displayName>Enable Event Log</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_ENABLE_EVENT_LOG"
					spirit:choiceRef="choices_4"
					spirit:order="400">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT1_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event1</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT1_FIFO_ENABLE"
					spirit:choiceRef="choices_5"
					spirit:order="10800">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT0_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event0</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT0_FIFO_ENABLE"
					spirit:choiceRef="choices_6"
					spirit:order="10700">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT2_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event2</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT2_FIFO_ENABLE"
					spirit:choiceRef="choices_7"
					spirit:order="10600">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT3_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event3</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT3_FIFO_ENABLE"
					spirit:choiceRef="choices_8"
					spirit:order="10500">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT4_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event4</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT4_FIFO_ENABLE"
					spirit:choiceRef="choices_9"
					spirit:order="10400">1</spirit:value>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT5_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event5</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT5_FIFO_ENABLE"
					spirit:choiceRef="choices_10"
					spirit:order="10300">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT6_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event6</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT6_FIFO_ENABLE"
					spirit:choiceRef="choices_11"
					spirit:order="10200">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EXT_EVENT7_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizers for Event7</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EXT_EVENT7_FIFO_ENABLE"
					spirit:choiceRef="choices_12"
					spirit:order="10100">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_REG_ALL_MONITOR_SIGNALS</spirit:name>
			<spirit:displayName>Register All Monitor Signals</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_REG_ALL_MONITOR_SIGNALS"
					spirit:choiceRef="choices_13"
					spirit:order="10000">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_FIFO_ENABLE"
					spirit:choiceRef="choices_14"
					spirit:order="9900">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXIS_TUSER_WIDTH"
					spirit:order="9800"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXIS_TDEST_WIDTH"
					spirit:order="9700"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXIS_TID_WIDTH"
					spirit:order="9600"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_15"
					spirit:order="9500">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXI_PROTOCOL"
					spirit:choiceRef="choices_16"
					spirit:order="9400">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXI_ID_WIDTH"
					spirit:order="9410"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_17"
					spirit:order="9420">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_7_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_7_AXI_ADDR_WIDTH"
					spirit:order="9100"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_FIFO_ENABLE"
					spirit:choiceRef="choices_18"
					spirit:order="9000">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXIS_TUSER_WIDTH"
					spirit:order="8900"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXIS_TDEST_WIDTH"
					spirit:order="8800"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXIS_TID_WIDTH"
					spirit:order="8700"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_19"
					spirit:order="8600">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXI_PROTOCOL"
					spirit:choiceRef="choices_20"
					spirit:order="8500">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXI_ID_WIDTH"
					spirit:order="8510"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_21"
					spirit:order="8520">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_6_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_6_AXI_ADDR_WIDTH"
					spirit:order="8200"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_FIFO_ENABLE"
					spirit:choiceRef="choices_22"
					spirit:order="8100">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXIS_TUSER_WIDTH"
					spirit:order="8000"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXIS_TDEST_WIDTH"
					spirit:order="7900"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXIS_TID_WIDTH"
					spirit:order="7800"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_23"
					spirit:order="7700">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXI_PROTOCOL"
					spirit:choiceRef="choices_24"
					spirit:order="7600">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXI_ID_WIDTH"
					spirit:order="7610"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_25"
					spirit:order="7620">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_5_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_5_AXI_ADDR_WIDTH"
					spirit:order="7300"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_FIFO_ENABLE"
					spirit:choiceRef="choices_26"
					spirit:order="7200">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXIS_TUSER_WIDTH"
					spirit:order="7100"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXIS_TDEST_WIDTH"
					spirit:order="7000"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXIS_TID_WIDTH"
					spirit:order="6900"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_27"
					spirit:order="6800">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXI_PROTOCOL"
					spirit:choiceRef="choices_28"
					spirit:order="6700">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXI_ID_WIDTH"
					spirit:order="6710"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_29"
					spirit:order="6720">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_4_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_4_AXI_ADDR_WIDTH"
					spirit:order="6400"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_FIFO_ENABLE"
					spirit:choiceRef="choices_30"
					spirit:order="6300">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXIS_TUSER_WIDTH"
					spirit:order="6200"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXIS_TDEST_WIDTH"
					spirit:order="6100"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXIS_TID_WIDTH"
					spirit:order="6000"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_31"
					spirit:order="5900">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXI_PROTOCOL"
					spirit:choiceRef="choices_32"
					spirit:order="5800">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXI_ID_WIDTH"
					spirit:order="5810"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_33"
					spirit:order="5820">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_3_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_3_AXI_ADDR_WIDTH"
					spirit:order="5500"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_FIFO_ENABLE"
					spirit:choiceRef="choices_34"
					spirit:order="5400">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXIS_TUSER_WIDTH"
					spirit:order="5300"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXIS_TDEST_WIDTH"
					spirit:order="5200"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXIS_TID_WIDTH"
					spirit:order="5100"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_35"
					spirit:order="5000">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXI_PROTOCOL"
					spirit:choiceRef="choices_36"
					spirit:order="4900">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXI_ID_WIDTH"
					spirit:order="4910"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_37"
					spirit:order="4920">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_2_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_2_AXI_ADDR_WIDTH"
					spirit:order="4600"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_FIFO_ENABLE"
					spirit:choiceRef="choices_38"
					spirit:order="4500">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXIS_TUSER_WIDTH"
					spirit:order="4400"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXIS_TDEST_WIDTH"
					spirit:order="4300"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXIS_TID_WIDTH"
					spirit:order="4200"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_39"
					spirit:order="4100">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXI_PROTOCOL"
					spirit:choiceRef="choices_40"
					spirit:order="4000">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXI_ID_WIDTH"
					spirit:order="4010"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_41"
					spirit:order="4020">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_1_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_1_AXI_ADDR_WIDTH"
					spirit:order="3700"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_FIFO_ENABLE</spirit:name>
			<spirit:displayName>Enable Synchronizer</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_FIFO_ENABLE"
					spirit:choiceRef="choices_42"
					spirit:order="3600">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXIS_TUSER_WIDTH</spirit:name>
			<spirit:displayName>TUSER Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXIS_TUSER_WIDTH"
					spirit:order="3500"
					spirit:minimum="0"
					spirit:maximum="256">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXIS_TDEST_WIDTH</spirit:name>
			<spirit:displayName>TDEST Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXIS_TDEST_WIDTH"
					spirit:order="3400"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXIS_TID_WIDTH</spirit:name>
			<spirit:displayName>TID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXIS_TID_WIDTH"
					spirit:order="3300"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXIS_TDATA_WIDTH</spirit:name>
			<spirit:displayName>TDATA Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXIS_TDATA_WIDTH"
					spirit:choiceRef="choices_43"
					spirit:order="3200">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXI_PROTOCOL</spirit:name>
			<spirit:displayName>AXI Protocol</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXI_PROTOCOL"
					spirit:choiceRef="choices_44"
					spirit:order="3100">AXI4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>ID Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXI_ID_WIDTH"
					spirit:order="3110"
					spirit:minimum="0"
					spirit:maximum="16">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXI_DATA_WIDTH</spirit:name>
			<spirit:displayName>Data Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXI_DATA_WIDTH"
					spirit:choiceRef="choices_45"
					spirit:order="3120">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SLOT_0_AXI_ADDR_WIDTH</spirit:name>
			<spirit:displayName>Address Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SLOT_0_AXI_ADDR_WIDTH"
					spirit:order="2800"
					spirit:minimum="1"
					spirit:maximum="64">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_METRIC_COUNT_SCALE</spirit:name>
			<spirit:displayName>Metric Counters Scaling</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_METRIC_COUNT_SCALE"
					spirit:choiceRef="choices_46"
					spirit:order="900">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_GLOBAL_COUNT_WIDTH</spirit:name>
			<spirit:displayName>Global Clock Count Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_GLOBAL_COUNT_WIDTH"
					spirit:choiceRef="choices_47"
					spirit:order="2400">32</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_NUM_OF_COUNTERS</spirit:name>
			<spirit:displayName>Number of Counters</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_NUM_OF_COUNTERS"
					spirit:order="2300"
					spirit:minimum="1"
					spirit:maximum="10">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_ENABLE_EVENT_COUNT</spirit:name>
			<spirit:displayName>Enable Event Counters</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_ENABLE_EVENT_COUNT"
					spirit:choiceRef="choices_48"
					spirit:order="500">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_NUM_MONITOR_SLOTS</spirit:name>
			<spirit:displayName>Number of Monitor Slots</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_NUM_MONITOR_SLOTS"
					spirit:order="2100"
					spirit:minimum="1"
					spirit:maximum="8">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Component_Name</spirit:name>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.Component_Name"
					spirit:order="1">axi_perf_mon_v5_0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_FIFO_AXIS_SYNC</spirit:name>
			<spirit:displayName>Is Event Log FIFO Synchronous</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_FIFO_AXIS_SYNC"
					spirit:choiceRef="choices_49"
					spirit:order="2000">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SHOW_AXI_IDS</spirit:name>
			<spirit:displayName>Show AXI IDs In Log Data</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SHOW_AXI_IDS"
					spirit:choiceRef="choices_50"
					spirit:order="1900">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SHOW_AXI_LEN</spirit:name>
			<spirit:displayName>Show AXI Transaction Length in Log Data</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SHOW_AXI_LEN"
					spirit:choiceRef="choices_51"
					spirit:order="1800">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SHOW_AXIS_TID</spirit:name>
			<spirit:displayName>Show AXI Streaming TID In Log Data</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SHOW_AXIS_TID"
					spirit:choiceRef="choices_52"
					spirit:order="1700">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SHOW_AXIS_TDEST</spirit:name>
			<spirit:displayName>Show AXI Streaming TDEST</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SHOW_AXIS_TDEST"
					spirit:choiceRef="choices_53"
					spirit:order="1600">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SHOW_AXIS_TUSER</spirit:name>
			<spirit:displayName>Show AXI Streaming TUSER</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SHOW_AXIS_TUSER"
					spirit:choiceRef="choices_54"
					spirit:order="1500">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SUPPORT_ID_REFLECTION</spirit:name>
			<spirit:displayName>Enable AXI ID Reflection</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SUPPORT_ID_REFLECTION"
					spirit:choiceRef="choices_55"
					spirit:order="1400">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_S_AXI_ID_WIDTH</spirit:name>
			<spirit:displayName>AXI Id Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_S_AXI_ID_WIDTH"
					spirit:order="1300"
					spirit:minimum="1"
					spirit:maximum="8">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>ENABLE_EXT_EVENTS</spirit:name>
			<spirit:displayName>Enable External Events</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.ENABLE_EXT_EVENTS"
					spirit:choiceRef="choices_56"
					spirit:order="1200">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>ENABLE_EXT_TRIGGERS</spirit:name>
			<spirit:displayName>Enable External Triggers</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.ENABLE_EXT_TRIGGERS"
					spirit:choiceRef="choices_57"
					spirit:order="1100">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_ENABLE_ADVANCED</spirit:name>
			<spirit:displayName>Advanced</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_ENABLE_ADVANCED"
					spirit:choiceRef="choices_58"
					spirit:order="300">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_ENABLE_PROFILE</spirit:name>
			<spirit:displayName>Profile</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_ENABLE_PROFILE"
					spirit:choiceRef="choices_59"
					spirit:order="100">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_ENABLE_TRACE</spirit:name>
			<spirit:displayName>Trace</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_ENABLE_TRACE"
					spirit:choiceRef="choices_60"
					spirit:order="200">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_WR_ADD_FLAG</spirit:name>
			<spirit:displayName>Write Address Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_WR_ADD_FLAG"
					spirit:choiceRef="choices_61"
					spirit:order="600">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_FIRST_WRITE_FLAG</spirit:name>
			<spirit:displayName>First Write Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_FIRST_WRITE_FLAG"
					spirit:choiceRef="choices_62"
					spirit:order="700">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_LAST_WRITE_FLAG</spirit:name>
			<spirit:displayName>Last Write Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_LAST_WRITE_FLAG"
					spirit:choiceRef="choices_63"
					spirit:order="800">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_RESPONSE_FLAG</spirit:name>
			<spirit:displayName>Write Response Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_RESPONSE_FLAG"
					spirit:choiceRef="choices_64"
					spirit:order="810">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_RD_ADD_FLAG</spirit:name>
			<spirit:displayName>Read Address Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_RD_ADD_FLAG"
					spirit:choiceRef="choices_65"
					spirit:order="820">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_FIRST_READ_FLAG</spirit:name>
			<spirit:displayName>First Read Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_FIRST_READ_FLAG"
					spirit:choiceRef="choices_66"
					spirit:order="830">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_LAST_READ_FLAG</spirit:name>
			<spirit:displayName>Last Read Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_LAST_READ_FLAG"
					spirit:choiceRef="choices_67"
					spirit:order="840">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_EXT_EVENTS_FLAG</spirit:name>
			<spirit:displayName>External Events Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_EXT_EVENTS_FLAG"
					spirit:choiceRef="choices_68"
					spirit:order="850">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_EN_SW_REG_WR_FLAG</spirit:name>
			<spirit:displayName>Sw Register Write Flag</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_EN_SW_REG_WR_FLAG"
					spirit:choiceRef="choices_69"
					spirit:order="860">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>COUNTER_LOAD_VALUE</spirit:name>
			<spirit:displayName>Counter Load Value</spirit:displayName>
			<spirit:value spirit:format="bitString"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.COUNTER_LOAD_VALUE"
					spirit:order="861"
					spirit:bitStringLength="32">0x00000000</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
	</spirit:parameters>
	<spirit:vendorExtensions>
		<xilinx:coreExtensions>
			<xilinx:supportedFamilies>
				<xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">kintexu</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">virtexu</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
				<xilinx:family xilinx:lifeCycle="Production">zynquplus</xilinx:family>
			</xilinx:supportedFamilies>
			<xilinx:taxonomies>
				<xilinx:taxonomy>/Embedded_Processing/Debug_&amp;_Verification</xilinx:taxonomy>
			</xilinx:taxonomies>
			<xilinx:displayName>AXI Performance Monitor</xilinx:displayName>
			<xilinx:vendorURL>http://www.xilinx.com</xilinx:vendorURL>
			<xilinx:coreRevision>14</xilinx:coreRevision>
			<xilinx:paymentRequired>false</xilinx:paymentRequired>
			<xilinx:upgrades>
				<xilinx:canUpgradeFrom>xilinx.com:ip:axi_perf_mon:2.01.a</xilinx:canUpgradeFrom>
				<xilinx:canUpgradeFrom>xilinx.com:ip:axi_perf_mon:3.00.a</xilinx:canUpgradeFrom>
				<xilinx:canUpgradeFrom>xilinx.com:ip:axi_perf_mon:4.0</xilinx:canUpgradeFrom>
			</xilinx:upgrades>
			<xilinx:coreCreationDateTime>2014-03-28T22:19:34Z</xilinx:coreCreationDateTime>
		</xilinx:coreExtensions>
		<xilinx:packagingInfo>
			<xilinx:xilinxVersion>2018.2</xilinx:xilinxVersion>
			<xilinx:checksum xilinx:scope="busInterfaces"
					xilinx:value="633bb556"/>
			<xilinx:checksum xilinx:scope="fileGroups"
					xilinx:value="d2d9ef01"/>
			<xilinx:checksum xilinx:scope="ports"
					xilinx:value="6f49940f"/>
			<xilinx:checksum xilinx:scope="hdlParameters"
					xilinx:value="2e15ced1"/>
			<xilinx:checksum xilinx:scope="parameters"
					xilinx:value="7b46c583"/>
		</xilinx:packagingInfo>
	</spirit:vendorExtensions>
</spirit:component>
