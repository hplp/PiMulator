// NVDLA TRACE config: sdp_passthrough_8x8x32_pack_inc
//---------- Layer:SDP_0, scenario:SDP----------
//----------## Layer:SDP_0: memory preparation, begin----------
mem_load(pri_mem, 0x80080000, "SDP_0_output.dat");
mem_load(pri_mem, 0x80000000, "SDP_0_input.dat");
//----------## Layer:SDP_0: memory preparation, end----------
//----------## Layer:SDP_0: cross layer dependency, begin----------
//----------## Layer:SDP_0: cross layer dependency, end----------
//----------## Layer:SDP_0: set producer pointer, begin----------
reg_write(NVDLA_SDP.S_POINTER_0, 0);
reg_write(NVDLA_SDP_RDMA.S_POINTER_0, 0);
//----------## Layer:SDP_0: set producer pointer, end----------
//----------## Layer:SDP_0: LUT programming, begin----------
reg_write(NVDLA_SDP.S_LUT_LO_START_0, 0x0);
// NVDLA_SDP.S_LUT_LO_START_0.LUT_LO_START:0x0
reg_write(NVDLA_SDP.S_LUT_ACCESS_CFG_0, 0x0);
// NVDLA_SDP.S_LUT_ACCESS_CFG_0.LUT_ACCESS_TYPE:READ : 0x0
// NVDLA_SDP.S_LUT_ACCESS_CFG_0.LUT_TABLE_ID:LE : 0x0
// NVDLA_SDP.S_LUT_ACCESS_CFG_0.LUT_ADDR:0x0
reg_write(NVDLA_SDP.S_LUT_LE_SLOPE_SCALE_0, 0x0);
// NVDLA_SDP.S_LUT_LE_SLOPE_SCALE_0.LUT_LE_SLOPE_UFLOW_SCALE:0x0
// NVDLA_SDP.S_LUT_LE_SLOPE_SCALE_0.LUT_LE_SLOPE_OFLOW_SCALE:0x0
reg_write(NVDLA_SDP.S_LUT_LO_SLOPE_SCALE_0, 0x0);
// NVDLA_SDP.S_LUT_LO_SLOPE_SCALE_0.LUT_LO_SLOPE_OFLOW_SCALE:0x0
// NVDLA_SDP.S_LUT_LO_SLOPE_SCALE_0.LUT_LO_SLOPE_UFLOW_SCALE:0x0
reg_write(NVDLA_SDP.S_LUT_LE_END_0, 0x0);
// NVDLA_SDP.S_LUT_LE_END_0.LUT_LE_END:0x0
reg_write(NVDLA_SDP.S_LUT_ACCESS_DATA_0, 0x0);
// NVDLA_SDP.S_LUT_ACCESS_DATA_0.LUT_DATA:0x0
reg_write(NVDLA_SDP.S_LUT_INFO_0, 0x0);
// NVDLA_SDP.S_LUT_INFO_0.LUT_LE_INDEX_SELECT:0x0
// NVDLA_SDP.S_LUT_INFO_0.LUT_LE_INDEX_OFFSET:0x0
// NVDLA_SDP.S_LUT_INFO_0.LUT_LO_INDEX_SELECT:0x0
reg_write(NVDLA_SDP.S_LUT_LO_SLOPE_SHIFT_0, 0x0);
// NVDLA_SDP.S_LUT_LO_SLOPE_SHIFT_0.LUT_LO_SLOPE_UFLOW_SHIFT:0x0
// NVDLA_SDP.S_LUT_LO_SLOPE_SHIFT_0.LUT_LO_SLOPE_OFLOW_SHIFT:0x0
reg_write(NVDLA_SDP.S_LUT_LE_START_0, 0x0);
// NVDLA_SDP.S_LUT_LE_START_0.LUT_LE_START:0x0
reg_write(NVDLA_SDP.S_LUT_CFG_0, 0x0);
// NVDLA_SDP.S_LUT_CFG_0.LUT_UFLOW_PRIORITY:LE : 0x0
// NVDLA_SDP.S_LUT_CFG_0.LUT_OFLOW_PRIORITY:LE : 0x0
// NVDLA_SDP.S_LUT_CFG_0.LUT_HYBRID_PRIORITY:LE : 0x0
// NVDLA_SDP.S_LUT_CFG_0.LUT_LE_FUNCTION:EXPONENT : 0x0
reg_write(NVDLA_SDP.S_LUT_LE_SLOPE_SHIFT_0, 0x0);
// NVDLA_SDP.S_LUT_LE_SLOPE_SHIFT_0.LUT_LE_SLOPE_OFLOW_SHIFT:0x0
// NVDLA_SDP.S_LUT_LE_SLOPE_SHIFT_0.LUT_LE_SLOPE_UFLOW_SHIFT:0x0
reg_write(NVDLA_SDP.S_LUT_LO_END_0, 0x0);
// NVDLA_SDP.S_LUT_LO_END_0.LUT_LO_END:0x0
//----------## Layer:SDP_0: LUT programming, end----------
//----------## Layer:SDP_0: configuraion, begin----------
reg_write(NVDLA_SDP.D_CVT_OFFSET_0, 0x0);
// NVDLA_SDP.D_CVT_OFFSET_0.CVT_OFFSET:0x0
reg_write(NVDLA_SDP.D_DST_DMA_CFG_0, 0x1);
// NVDLA_SDP.D_DST_DMA_CFG_0.DST_RAM_TYPE:MC : 0x1
reg_write(NVDLA_SDP_RDMA.D_SRC_SURFACE_STRIDE_0, 0x800);
// NVDLA_SDP_RDMA.D_SRC_SURFACE_STRIDE_0.SRC_SURFACE_STRIDE:0x40
reg_write(NVDLA_SDP.D_DST_LINE_STRIDE_0, 0x100);
// NVDLA_SDP.D_DST_LINE_STRIDE_0.DST_LINE_STRIDE:0x8
reg_write(NVDLA_SDP_RDMA.D_SRC_LINE_STRIDE_0, 0x100);
// NVDLA_SDP_RDMA.D_SRC_LINE_STRIDE_0.SRC_LINE_STRIDE:0x8
reg_write(NVDLA_SDP_RDMA.D_SRC_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_SDP_RDMA.D_SRC_BASE_ADDR_HIGH_0.SRC_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_SDP_RDMA.D_BRDMA_CFG_0, 0x1);
// NVDLA_SDP_RDMA.D_BRDMA_CFG_0.BRDMA_RAM_TYPE:CV : 0x0
// NVDLA_SDP_RDMA.D_BRDMA_CFG_0.BRDMA_DATA_SIZE:ONE_BYTE : 0x0
// NVDLA_SDP_RDMA.D_BRDMA_CFG_0.BRDMA_DATA_MODE:PER_KERNEL : 0x0
// NVDLA_SDP_RDMA.D_BRDMA_CFG_0.BRDMA_DISABLE:YES : 0x1
// NVDLA_SDP_RDMA.D_BRDMA_CFG_0.BRDMA_DATA_USE:MUL : 0x0
reg_write(NVDLA_SDP_RDMA.D_BS_BATCH_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BS_BATCH_STRIDE_0.BS_BATCH_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_EW_ALU_CVT_SCALE_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_ALU_CVT_SCALE_VALUE_0.EW_ALU_CVT_SCALE:0x0
reg_write(NVDLA_SDP_RDMA.D_EW_LINE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_EW_LINE_STRIDE_0.EW_LINE_STRIDE:0x0
reg_write(NVDLA_SDP_RDMA.D_BN_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_SDP_RDMA.D_BN_BASE_ADDR_HIGH_0.BN_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_SDP.D_DP_EW_ALU_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_ALU_SRC_VALUE_0.EW_ALU_OPERAND:0x0
reg_write(NVDLA_SDP_RDMA.D_NRDMA_CFG_0, 0x1);
// NVDLA_SDP_RDMA.D_NRDMA_CFG_0.NRDMA_DATA_SIZE:ONE_BYTE : 0x0
// NVDLA_SDP_RDMA.D_NRDMA_CFG_0.NRDMA_RAM_TYPE:CV : 0x0
// NVDLA_SDP_RDMA.D_NRDMA_CFG_0.NRDMA_DISABLE:YES : 0x1
// NVDLA_SDP_RDMA.D_NRDMA_CFG_0.NRDMA_DATA_USE:MUL : 0x0
// NVDLA_SDP_RDMA.D_NRDMA_CFG_0.NRDMA_DATA_MODE:PER_KERNEL : 0x0
reg_write(NVDLA_SDP.D_DP_EW_MUL_CVT_SCALE_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_MUL_CVT_SCALE_VALUE_0.EW_MUL_CVT_SCALE:0x0
reg_write(NVDLA_SDP_RDMA.D_BN_BATCH_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BN_BATCH_STRIDE_0.BN_BATCH_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_EW_MUL_CVT_TRUNCATE_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_MUL_CVT_TRUNCATE_VALUE_0.EW_MUL_CVT_TRUNCATE:0x0
reg_write(NVDLA_SDP_RDMA.D_EW_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_SDP_RDMA.D_EW_BASE_ADDR_HIGH_0.EW_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_SDP.D_DP_EW_MUL_CFG_0, 0x0);
// NVDLA_SDP.D_DP_EW_MUL_CFG_0.EW_MUL_SRC:REG : 0x0
// NVDLA_SDP.D_DP_EW_MUL_CFG_0.EW_MUL_CVT_BYPASS:NO : 0x0
reg_write(NVDLA_SDP.D_DATA_CUBE_WIDTH_0, 0x7);
// NVDLA_SDP.D_DATA_CUBE_WIDTH_0.WIDTH:0x7
reg_write(NVDLA_SDP.D_DP_BN_ALU_CFG_0, 0x0);
// NVDLA_SDP.D_DP_BN_ALU_CFG_0.BN_ALU_SRC:REG : 0x0
// NVDLA_SDP.D_DP_BN_ALU_CFG_0.BN_ALU_SHIFT_VALUE:0x0
reg_write(NVDLA_SDP_RDMA.D_EW_BASE_ADDR_LOW_0, 0x0);
// NVDLA_SDP_RDMA.D_EW_BASE_ADDR_LOW_0.EW_BASE_ADDR_LOW:0x0
reg_write(NVDLA_SDP.D_DATA_CUBE_CHANNEL_0, 0x1f);
// NVDLA_SDP.D_DATA_CUBE_CHANNEL_0.CHANNEL:0x1f
reg_write(NVDLA_SDP.D_DATA_CUBE_HEIGHT_0, 0x7);
// NVDLA_SDP.D_DATA_CUBE_HEIGHT_0.HEIGHT:0x7
reg_write(NVDLA_SDP.D_DP_BS_MUL_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_BS_MUL_SRC_VALUE_0.BS_MUL_OPERAND:0x0
reg_write(NVDLA_SDP_RDMA.D_BN_LINE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BN_LINE_STRIDE_0.BN_LINE_STRIDE:0x0
reg_write(NVDLA_SDP_RDMA.D_BS_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_SDP_RDMA.D_BS_BASE_ADDR_HIGH_0.BS_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_SDP.D_DP_EW_ALU_CVT_OFFSET_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_ALU_CVT_OFFSET_VALUE_0.EW_ALU_CVT_OFFSET:0x0
reg_write(NVDLA_SDP_RDMA.D_DATA_CUBE_CHANNEL_0, 0x1f);
// NVDLA_SDP_RDMA.D_DATA_CUBE_CHANNEL_0.CHANNEL:0x1f
reg_write(NVDLA_SDP.D_DP_BN_MUL_CFG_0, 0x0);
// NVDLA_SDP.D_DP_BN_MUL_CFG_0.BN_MUL_SRC:REG : 0x0
// NVDLA_SDP.D_DP_BN_MUL_CFG_0.BN_MUL_SHIFT_VALUE:0x0
reg_write(NVDLA_SDP.D_DP_BN_MUL_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_BN_MUL_SRC_VALUE_0.BN_MUL_OPERAND:0x0
reg_write(NVDLA_SDP_RDMA.D_BS_BASE_ADDR_LOW_0, 0x0);
// NVDLA_SDP_RDMA.D_BS_BASE_ADDR_LOW_0.BS_BASE_ADDR_LOW:0x0
reg_write(NVDLA_SDP_RDMA.D_ERDMA_CFG_0, 0x1);
// NVDLA_SDP_RDMA.D_ERDMA_CFG_0.ERDMA_DISABLE:YES : 0x1
// NVDLA_SDP_RDMA.D_ERDMA_CFG_0.ERDMA_DATA_USE:MUL : 0x0
// NVDLA_SDP_RDMA.D_ERDMA_CFG_0.ERDMA_DATA_SIZE:ONE_BYTE : 0x0
// NVDLA_SDP_RDMA.D_ERDMA_CFG_0.ERDMA_RAM_TYPE:CV : 0x0
// NVDLA_SDP_RDMA.D_ERDMA_CFG_0.ERDMA_DATA_MODE:PER_KERNEL : 0x0
reg_write(NVDLA_SDP.D_DST_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_SDP.D_DST_BASE_ADDR_HIGH_0.DST_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_SDP_RDMA.D_BS_SURFACE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BS_SURFACE_STRIDE_0.BS_SURFACE_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_EW_MUL_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_MUL_SRC_VALUE_0.EW_MUL_OPERAND:0x0
reg_write(NVDLA_SDP_RDMA.D_BS_LINE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BS_LINE_STRIDE_0.BS_LINE_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_BS_ALU_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_BS_ALU_SRC_VALUE_0.BS_ALU_OPERAND:0x0
reg_write(NVDLA_SDP.D_CVT_SHIFT_0, 0x0);
// NVDLA_SDP.D_CVT_SHIFT_0.CVT_SHIFT:0x0
reg_write(NVDLA_SDP.D_DP_EW_ALU_CFG_0, 0x0);
// NVDLA_SDP.D_DP_EW_ALU_CFG_0.EW_ALU_SRC:REG : 0x0
// NVDLA_SDP.D_DP_EW_ALU_CFG_0.EW_ALU_CVT_BYPASS:NO : 0x0
reg_write(NVDLA_SDP.D_DST_SURFACE_STRIDE_0, 0x800);
// NVDLA_SDP.D_DST_SURFACE_STRIDE_0.DST_SURFACE_STRIDE:0x40
reg_write(NVDLA_SDP.D_FEATURE_MODE_CFG_0, 0x0);
// NVDLA_SDP.D_FEATURE_MODE_CFG_0.OUTPUT_DST:MEM : 0x0
// NVDLA_SDP.D_FEATURE_MODE_CFG_0.FLYING_MODE:OFF : 0x0
// NVDLA_SDP.D_FEATURE_MODE_CFG_0.BATCH_NUMBER:0x0
// NVDLA_SDP.D_FEATURE_MODE_CFG_0.WINOGRAD:OFF : 0x0
// NVDLA_SDP.D_FEATURE_MODE_CFG_0.NAN_TO_ZERO:DISABLE : 0x0
reg_write(NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0, 0x0);
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.FLYING_MODE:OFF : 0x0
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.IN_PRECISION:INT8 : 0x0
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.BATCH_NUMBER:0x0
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.WINOGRAD:OFF : 0x0
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.PROC_PRECISION:INT8 : 0x0
// NVDLA_SDP_RDMA.D_FEATURE_MODE_CFG_0.OUT_PRECISION:INT8 : 0x0
reg_write(NVDLA_SDP.D_DP_BS_CFG_0, 0x1);
// NVDLA_SDP.D_DP_BS_CFG_0.BS_MUL_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_BS_CFG_0.BS_MUL_PRELU:NO : 0x0
// NVDLA_SDP.D_DP_BS_CFG_0.BS_ALU_ALGO:MAX : 0x0
// NVDLA_SDP.D_DP_BS_CFG_0.BS_ALU_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_BS_CFG_0.BS_BYPASS:YES : 0x1
// NVDLA_SDP.D_DP_BS_CFG_0.BS_RELU_BYPASS:NO : 0x0
reg_write(NVDLA_SDP.D_CVT_SCALE_0, 0x1);
// NVDLA_SDP.D_CVT_SCALE_0.CVT_SCALE:0x1
reg_write(NVDLA_SDP.D_DP_BN_CFG_0, 0x1);
// NVDLA_SDP.D_DP_BN_CFG_0.BN_RELU_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_BN_CFG_0.BN_MUL_PRELU:NO : 0x0
// NVDLA_SDP.D_DP_BN_CFG_0.BN_BYPASS:YES : 0x1
// NVDLA_SDP.D_DP_BN_CFG_0.BN_ALU_ALGO:MAX : 0x0
// NVDLA_SDP.D_DP_BN_CFG_0.BN_ALU_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_BN_CFG_0.BN_MUL_BYPASS:NO : 0x0
reg_write(NVDLA_SDP.D_DP_BN_ALU_SRC_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_BN_ALU_SRC_VALUE_0.BN_ALU_OPERAND:0x0
reg_write(NVDLA_SDP_RDMA.D_SRC_DMA_CFG_0, 0x1);
// NVDLA_SDP_RDMA.D_SRC_DMA_CFG_0.SRC_RAM_TYPE:MC : 0x1
reg_write(NVDLA_SDP.D_DST_BATCH_STRIDE_0, 0x0);
// NVDLA_SDP.D_DST_BATCH_STRIDE_0.DST_BATCH_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_BS_ALU_CFG_0, 0x0);
// NVDLA_SDP.D_DP_BS_ALU_CFG_0.BS_ALU_SRC:REG : 0x0
// NVDLA_SDP.D_DP_BS_ALU_CFG_0.BS_ALU_SHIFT_VALUE:0x0
reg_write(NVDLA_SDP_RDMA.D_BN_SURFACE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_BN_SURFACE_STRIDE_0.BN_SURFACE_STRIDE:0x0
reg_write(NVDLA_SDP.D_DP_EW_MUL_CVT_OFFSET_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_MUL_CVT_OFFSET_VALUE_0.EW_MUL_CVT_OFFSET:0x0
reg_write(NVDLA_SDP_RDMA.D_EW_SURFACE_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_EW_SURFACE_STRIDE_0.EW_SURFACE_STRIDE:0x0
reg_write(NVDLA_SDP.D_DST_BASE_ADDR_LOW_0, 0x80080000);
// NVDLA_SDP.D_DST_BASE_ADDR_LOW_0.DST_BASE_ADDR_LOW:0x4004000
reg_write(NVDLA_SDP_RDMA.D_EW_BATCH_STRIDE_0, 0x0);
// NVDLA_SDP_RDMA.D_EW_BATCH_STRIDE_0.EW_BATCH_STRIDE:0x0
reg_write(NVDLA_SDP_RDMA.D_PERF_ENABLE_0, 0x0);
// NVDLA_SDP_RDMA.D_PERF_ENABLE_0.PERF_DMA_EN:NO : 0x0
// NVDLA_SDP_RDMA.D_PERF_ENABLE_0.PERF_NAN_INF_COUNT_EN:NO : 0x0
reg_write(NVDLA_SDP.D_DP_EW_ALU_CVT_TRUNCATE_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_ALU_CVT_TRUNCATE_VALUE_0.EW_ALU_CVT_TRUNCATE:0x0
reg_write(NVDLA_SDP_RDMA.D_DATA_CUBE_HEIGHT_0, 0x7);
// NVDLA_SDP_RDMA.D_DATA_CUBE_HEIGHT_0.HEIGHT:0x7
reg_write(NVDLA_SDP.D_PERF_ENABLE_0, 0x0);
// NVDLA_SDP.D_PERF_ENABLE_0.PERF_LUT_EN:NO : 0x0
// NVDLA_SDP.D_PERF_ENABLE_0.PERF_DMA_EN:NO : 0x0
// NVDLA_SDP.D_PERF_ENABLE_0.PERF_SAT_EN:NO : 0x0
// NVDLA_SDP.D_PERF_ENABLE_0.PERF_NAN_INF_COUNT_EN:NO : 0x0
reg_write(NVDLA_SDP.D_DP_EW_TRUNCATE_VALUE_0, 0x0);
// NVDLA_SDP.D_DP_EW_TRUNCATE_VALUE_0.EW_TRUNCATE:0x0
reg_write(NVDLA_SDP_RDMA.D_SRC_BASE_ADDR_LOW_0, 0x80000000);
// NVDLA_SDP_RDMA.D_SRC_BASE_ADDR_LOW_0.SRC_BASE_ADDR_LOW:0x4000000
reg_write(NVDLA_SDP_RDMA.D_BN_BASE_ADDR_LOW_0, 0x0);
// NVDLA_SDP_RDMA.D_BN_BASE_ADDR_LOW_0.BN_BASE_ADDR_LOW:0x0
reg_write(NVDLA_SDP.D_DP_BS_MUL_CFG_0, 0x0);
// NVDLA_SDP.D_DP_BS_MUL_CFG_0.BS_MUL_SHIFT_VALUE:0x0
// NVDLA_SDP.D_DP_BS_MUL_CFG_0.BS_MUL_SRC:REG : 0x0
reg_write(NVDLA_SDP.D_DP_EW_CFG_0, 0x1);
// NVDLA_SDP.D_DP_EW_CFG_0.EW_LUT_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_EW_CFG_0.EW_BYPASS:YES : 0x1
// NVDLA_SDP.D_DP_EW_CFG_0.EW_MUL_PRELU:NO : 0x0
// NVDLA_SDP.D_DP_EW_CFG_0.EW_ALU_ALGO:MAX : 0x0
// NVDLA_SDP.D_DP_EW_CFG_0.EW_ALU_BYPASS:NO : 0x0
// NVDLA_SDP.D_DP_EW_CFG_0.EW_MUL_BYPASS:NO : 0x0
reg_write(NVDLA_SDP.D_DATA_FORMAT_0, 0x0);
// NVDLA_SDP.D_DATA_FORMAT_0.PROC_PRECISION:INT8 : 0x0
// NVDLA_SDP.D_DATA_FORMAT_0.OUT_PRECISION:INT8 : 0x0
reg_write(NVDLA_SDP_RDMA.D_DATA_CUBE_WIDTH_0, 0x7);
// NVDLA_SDP_RDMA.D_DATA_CUBE_WIDTH_0.WIDTH:0x7
//----------## Layer:SDP_0: configuraion, end----------
//----------## Layer:SDP_0: operation enable, begin----------
//----------#### Layer:SDP_0: operation enable, block:NVDLA_SDP_RDMA, begin --
reg_write(NVDLA_SDP_RDMA.D_OP_ENABLE_0,0x1);
//----------#### Layer:SDP_0: operation enable, block:NVDLA_SDP_RDMA, end   --
//----------#### Layer:SDP_0: operation enable, block:NVDLA_SDP, begin --
reg_write(NVDLA_SDP.D_OP_ENABLE_0,0x1);
//----------#### Layer:SDP_0: operation enable, block:NVDLA_SDP, end   --
//----------## Layer:SDP_0: operation enable, end----------
//----------## Layer:SDP_0: interrupt handling, begin----------
intr_notify(SDP_0, SDP_0_SDP_0_interrupt);
//----------## Layer:SDP_0: interrupt handling, end----------
//----------## Layer:SDP_0: result checker, begin----------
check_crc(SDP_0_SDP_0_interrupt, pri_mem, 0x80080000, 0x800, 0x9f5edd58);
//----------## Layer:SDP_0: result checker, end----------
