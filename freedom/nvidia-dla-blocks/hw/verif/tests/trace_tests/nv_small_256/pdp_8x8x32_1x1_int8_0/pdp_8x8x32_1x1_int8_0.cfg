// NVDLA TRACE config: pdp_passthrough_8x8x32_pack_all_zero_int8
//---------- Layer:PDP_0, scenario:PDP----------
//----------## Layer:PDP_0: memory preparation, begin----------
mem_load(pri_mem, 0x80000000, "PDP_0_input.dat");
mem_load(pri_mem, 0x80080000, "PDP_0_output.dat");
//----------## Layer:PDP_0: memory preparation, end----------
//----------## Layer:PDP_0: cross layer dependency, begin----------
//----------## Layer:PDP_0: cross layer dependency, end----------
//----------## Layer:PDP_0: set producer pointer, begin----------
reg_write(NVDLA_PDP.S_POINTER_0, 0);
reg_write(NVDLA_PDP_RDMA.S_POINTER_0, 0);
//----------## Layer:PDP_0: set producer pointer, end----------
//----------## Layer:PDP_0: LUT programming, begin----------
//----------## Layer:PDP_0: LUT programming, end----------
//----------## Layer:PDP_0: configuraion, begin----------
reg_write(NVDLA_PDP_RDMA.D_POOLING_PADDING_CFG_0, 0x0);
// NVDLA_PDP_RDMA.D_POOLING_PADDING_CFG_0.PAD_WIDTH:0x0
reg_write(NVDLA_PDP.D_DST_RAM_CFG_0, 0x1);
// NVDLA_PDP.D_DST_RAM_CFG_0.DST_RAM_TYPE:MC : 0x1
reg_write(NVDLA_PDP.D_RECIP_KERNEL_WIDTH_0, 0x0);
// NVDLA_PDP.D_RECIP_KERNEL_WIDTH_0.RECIP_KERNEL_WIDTH:0x0
reg_write(NVDLA_PDP.D_DST_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_PDP.D_DST_BASE_ADDR_HIGH_0.DST_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_PDP_RDMA.D_FLYING_MODE_0, 0x1);
// NVDLA_PDP_RDMA.D_FLYING_MODE_0.FLYING_MODE:OFF_FLYING : 0x1
reg_write(NVDLA_PDP.D_SRC_SURFACE_STRIDE_0, 0x200);
// NVDLA_PDP.D_SRC_SURFACE_STRIDE_0.SRC_SURFACE_STRIDE:0x40
reg_write(NVDLA_PDP.D_DATA_CUBE_IN_WIDTH_0, 0x7);
// NVDLA_PDP.D_DATA_CUBE_IN_WIDTH_0.CUBE_IN_WIDTH:0x7
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_2_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_2_CFG_0.PAD_VALUE_2X:0x0
reg_write(NVDLA_PDP.D_OPERATION_MODE_CFG_0, 0x11);
// NVDLA_PDP.D_OPERATION_MODE_CFG_0.SPLIT_NUM:0x0
// NVDLA_PDP.D_OPERATION_MODE_CFG_0.FLYING_MODE:OFF_FLYING : 0x1
// NVDLA_PDP.D_OPERATION_MODE_CFG_0.POOLING_METHOD:POOLING_METHOD_MAX : 0x1
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_1_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_1_CFG_0.PAD_VALUE_1X:0x0
reg_write(NVDLA_PDP.D_DST_LINE_STRIDE_0, 0x40);
// NVDLA_PDP.D_DST_LINE_STRIDE_0.DST_LINE_STRIDE:0x8
reg_write(NVDLA_PDP.D_DATA_CUBE_OUT_HEIGHT_0, 0x7);
// NVDLA_PDP.D_DATA_CUBE_OUT_HEIGHT_0.CUBE_OUT_HEIGHT:0x7
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_3_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_3_CFG_0.PAD_VALUE_3X:0x0
reg_write(NVDLA_PDP.D_RECIP_KERNEL_HEIGHT_0, 0x0);
// NVDLA_PDP.D_RECIP_KERNEL_HEIGHT_0.RECIP_KERNEL_HEIGHT:0x0
reg_write(NVDLA_PDP_RDMA.D_SRC_LINE_STRIDE_0, 0x40);
// NVDLA_PDP_RDMA.D_SRC_LINE_STRIDE_0.SRC_LINE_STRIDE:0x8
reg_write(NVDLA_PDP.D_PARTIAL_WIDTH_IN_0, 0x0);
// NVDLA_PDP.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_MID:0x0
// NVDLA_PDP.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_FIRST:0x0
// NVDLA_PDP.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_LAST:0x0
reg_write(NVDLA_PDP.D_DST_SURFACE_STRIDE_0, 0x200);
// NVDLA_PDP.D_DST_SURFACE_STRIDE_0.DST_SURFACE_STRIDE:0x40
reg_write(NVDLA_PDP_RDMA.D_DATA_CUBE_IN_CHANNEL_0, 0x1f);
// NVDLA_PDP_RDMA.D_DATA_CUBE_IN_CHANNEL_0.CUBE_IN_CHANNEL:0x1f
reg_write(NVDLA_PDP.D_NAN_FLUSH_TO_ZERO_0, 0x0);
// NVDLA_PDP.D_NAN_FLUSH_TO_ZERO_0.NAN_TO_ZERO:DISABLE : 0x0
reg_write(NVDLA_PDP_RDMA.D_SRC_BASE_ADDR_LOW_0, 0x80000000);
// NVDLA_PDP_RDMA.D_SRC_BASE_ADDR_LOW_0.SRC_BASE_ADDR_LOW:0x4000000
reg_write(NVDLA_PDP_RDMA.D_DATA_CUBE_IN_HEIGHT_0, 0x7);
// NVDLA_PDP_RDMA.D_DATA_CUBE_IN_HEIGHT_0.CUBE_IN_HEIGHT:0x7
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_7_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_7_CFG_0.PAD_VALUE_7X:0x0
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_4_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_4_CFG_0.PAD_VALUE_4X:0x0
reg_write(NVDLA_PDP_RDMA.D_PARTIAL_WIDTH_IN_0, 0x0);
// NVDLA_PDP_RDMA.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_MID:0x0
// NVDLA_PDP_RDMA.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_FIRST:0x0
// NVDLA_PDP_RDMA.D_PARTIAL_WIDTH_IN_0.PARTIAL_WIDTH_IN_LAST:0x0
reg_write(NVDLA_PDP.D_POOLING_PADDING_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_CFG_0.PAD_LEFT:0x0
// NVDLA_PDP.D_POOLING_PADDING_CFG_0.PAD_TOP:0x0
// NVDLA_PDP.D_POOLING_PADDING_CFG_0.PAD_RIGHT:0x0
// NVDLA_PDP.D_POOLING_PADDING_CFG_0.PAD_BOTTOM:0x0
reg_write(NVDLA_PDP.D_DATA_CUBE_OUT_CHANNEL_0, 0x1f);
// NVDLA_PDP.D_DATA_CUBE_OUT_CHANNEL_0.CUBE_OUT_CHANNEL:0x1f
reg_write(NVDLA_PDP_RDMA.D_POOLING_KERNEL_CFG_0, 0x0);
// NVDLA_PDP_RDMA.D_POOLING_KERNEL_CFG_0.KERNEL_WIDTH:KERNEL_WIDTH_1 : 0x0
// NVDLA_PDP_RDMA.D_POOLING_KERNEL_CFG_0.KERNEL_STRIDE_WIDTH:0x0
reg_write(NVDLA_PDP.D_PERF_ENABLE_0, 0x0);
// NVDLA_PDP.D_PERF_ENABLE_0.DMA_EN:DISABLE : 0x0
reg_write(NVDLA_PDP.D_DATA_CUBE_IN_HEIGHT_0, 0x7);
// NVDLA_PDP.D_DATA_CUBE_IN_HEIGHT_0.CUBE_IN_HEIGHT:0x7
reg_write(NVDLA_PDP.D_DATA_CUBE_IN_CHANNEL_0, 0x1f);
// NVDLA_PDP.D_DATA_CUBE_IN_CHANNEL_0.CUBE_IN_CHANNEL:0x1f
reg_write(NVDLA_PDP.D_SRC_LINE_STRIDE_0, 0x40);
// NVDLA_PDP.D_SRC_LINE_STRIDE_0.SRC_LINE_STRIDE:0x8
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_6_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_6_CFG_0.PAD_VALUE_6X:0x0
reg_write(NVDLA_PDP_RDMA.D_DATA_CUBE_IN_WIDTH_0, 0x7);
// NVDLA_PDP_RDMA.D_DATA_CUBE_IN_WIDTH_0.CUBE_IN_WIDTH:0x7
reg_write(NVDLA_PDP.D_POOLING_PADDING_VALUE_5_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_PADDING_VALUE_5_CFG_0.PAD_VALUE_5X:0x0
reg_write(NVDLA_PDP_RDMA.D_PERF_ENABLE_0, 0x0);
// NVDLA_PDP_RDMA.D_PERF_ENABLE_0.DMA_EN:DISABLE : 0x0
reg_write(NVDLA_PDP.D_SRC_BASE_ADDR_LOW_0, 0x80000000);
// NVDLA_PDP.D_SRC_BASE_ADDR_LOW_0.SRC_BASE_ADDR_LOW:0x4000000
reg_write(NVDLA_PDP.D_PARTIAL_WIDTH_OUT_0, 0x0);
// NVDLA_PDP.D_PARTIAL_WIDTH_OUT_0.PARTIAL_WIDTH_OUT_LAST:0x0
// NVDLA_PDP.D_PARTIAL_WIDTH_OUT_0.PARTIAL_WIDTH_OUT_MID:0x0
// NVDLA_PDP.D_PARTIAL_WIDTH_OUT_0.PARTIAL_WIDTH_OUT_FIRST:0x0
reg_write(NVDLA_PDP_RDMA.D_OPERATION_MODE_CFG_0, 0x0);
// NVDLA_PDP_RDMA.D_OPERATION_MODE_CFG_0.SPLIT_NUM:0x0
reg_write(NVDLA_PDP.D_DATA_FORMAT_0, 0x0);
// NVDLA_PDP.D_DATA_FORMAT_0.INPUT_DATA:INT8 : 0x0
reg_write(NVDLA_PDP.D_SRC_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_PDP.D_SRC_BASE_ADDR_HIGH_0.SRC_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_PDP_RDMA.D_SRC_SURFACE_STRIDE_0, 0x200);
// NVDLA_PDP_RDMA.D_SRC_SURFACE_STRIDE_0.SRC_SURFACE_STRIDE:0x40
reg_write(NVDLA_PDP_RDMA.D_DATA_FORMAT_0, 0x0);
// NVDLA_PDP_RDMA.D_DATA_FORMAT_0.INPUT_DATA:INT8 : 0x0
reg_write(NVDLA_PDP.D_CYA_0, 0x0);
// NVDLA_PDP.D_CYA_0.CYA:0x0
reg_write(NVDLA_PDP_RDMA.D_SRC_RAM_CFG_0, 0x1);
// NVDLA_PDP_RDMA.D_SRC_RAM_CFG_0.SRC_RAM_TYPE:MC : 0x1
reg_write(NVDLA_PDP.D_DST_BASE_ADDR_LOW_0, 0x80080000);
// NVDLA_PDP.D_DST_BASE_ADDR_LOW_0.DST_BASE_ADDR_LOW:0x4004000
reg_write(NVDLA_PDP_RDMA.D_SRC_BASE_ADDR_HIGH_0, 0x0);
// NVDLA_PDP_RDMA.D_SRC_BASE_ADDR_HIGH_0.SRC_BASE_ADDR_HIGH:0x0
reg_write(NVDLA_PDP.D_POOLING_KERNEL_CFG_0, 0x0);
// NVDLA_PDP.D_POOLING_KERNEL_CFG_0.KERNEL_STRIDE_HEIGHT:0x0
// NVDLA_PDP.D_POOLING_KERNEL_CFG_0.KERNEL_WIDTH:KERNEL_WIDTH_1 : 0x0
// NVDLA_PDP.D_POOLING_KERNEL_CFG_0.KERNEL_STRIDE_WIDTH:0x0
// NVDLA_PDP.D_POOLING_KERNEL_CFG_0.KERNEL_HEIGHT:KERNEL_HEIGHT_1 : 0x0
reg_write(NVDLA_PDP_RDMA.D_CYA_0, 0x0);
// NVDLA_PDP_RDMA.D_CYA_0.CYA:0x0
reg_write(NVDLA_PDP.D_DATA_CUBE_OUT_WIDTH_0, 0x7);
// NVDLA_PDP.D_DATA_CUBE_OUT_WIDTH_0.CUBE_OUT_WIDTH:0x7
//----------## Layer:PDP_0: configuraion, end----------
//----------## Layer:PDP_0: operation enable, begin----------
//----------#### Layer:PDP_0: operation enable, block:NVDLA_PDP_RDMA, begin --
reg_write(NVDLA_PDP_RDMA.D_OP_ENABLE_0,0x1);
//----------#### Layer:PDP_0: operation enable, block:NVDLA_PDP_RDMA, end   --
//----------#### Layer:PDP_0: operation enable, block:NVDLA_PDP, begin --
reg_write(NVDLA_PDP.D_OP_ENABLE_0,0x1);
//----------#### Layer:PDP_0: operation enable, block:NVDLA_PDP, end   --
//----------## Layer:PDP_0: operation enable, end----------
//----------## Layer:PDP_0: interrupt handling, begin----------
intr_notify(PDP_0, PDP_0_PDP_0_interrupt);
//----------## Layer:PDP_0: interrupt handling, end----------
//----------## Layer:PDP_0: result checker, begin----------
check_crc(PDP_0_PDP_0_interrupt, pri_mem, 0x80080000, 0x800, 0xf1e8ba9e);
//----------## Layer:PDP_0: result checker, end----------
